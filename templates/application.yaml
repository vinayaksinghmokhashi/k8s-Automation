apiVersion: v1
kind: Service
metadata:
  name: {{ include "3-tier.fullname" . }}-web-httpd-service
  labels:
  {{- include "3-tier.labels" . | nindent 4 }}
spec:
  type: {{ .Values.webHttpdService.type }}
  selector:
    app: web-httpd
  {{- include "3-tier.selectorLabels" . | nindent 4 }}
  ports:
	{{- .Values.webHttpdService.ports | toYaml | nindent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "3-tier.fullname" . }}-web-httpd-deployment
  labels:
  {{- include "3-tier.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.webHttpdDeployment.replicas }}
  selector:
    matchLabels:
      app: web-httpd
    {{- include "3-tier.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: web-httpd
      {{- include "3-tier.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.webHttpdDeployment.webHttpd.image.repository }}:{{ .Values.webHttpdDeployment.webHttpd.image.tag
          | default .Chart.AppVersion }}
        name: web-httpd
        ports:
        - containerPort: 80
        resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "3-tier.fullname" . }}-nodejs-app-deployment
  labels:
  {{- include "3-tier.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.nodejsAppDeployment.replicas }}
  selector:
    matchLabels:
      app: nodejs-app
    {{- include "3-tier.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: nodejs-app
      {{- include "3-tier.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - command:
        - sleep
        - "100000"
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.nodejsAppDeployment.nodejsApp.image.repository }}:{{ .Values.nodejsAppDeployment.nodejsApp.image.tag
          | default .Chart.AppVersion }}
        name: nodejs-app
        resources: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "3-tier.fullname" . }}-config
  labels:
    app: postgres-db
  {{- include "3-tier.labels" . | nindent 4 }}
data:
  POSTGRES_DB: {{ .Values.config.postgresDb | quote }}
  POSTGRES_PASSWORD: {{ .Values.config.postgresPassword | quote }}
  POSTGRES_USER: {{ .Values.config.postgresUser | quote }}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ include "3-tier.fullname" . }}-pv-volume
  labels:
    app: postgres-db
    type: local
  {{- include "3-tier.labels" . | nindent 4 }}
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 5Gi
  hostPath:
    path: /mnt/data
  storageClassName: manual
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "3-tier.fullname" . }}-pv-claim
  labels:
    app: postgres-db
  {{- include "3-tier.labels" . | nindent 4 }}
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.pvc.pvClaim.storageRequest | quote }}
  storageClassName: {{ .Values.pvc.pvClaim.storageClass | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "3-tier.fullname" . }}-postgres
  labels:
    app: postgres-db
  {{- include "3-tier.labels" . | nindent 4 }}
spec:
  type: {{ .Values.postgres.type }}
  selector:
    app: postgres-db
  {{- include "3-tier.selectorLabels" . | nindent 4 }}
  ports:
	{{- .Values.postgres.ports | toYaml | nindent 2 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "3-tier.fullname" . }}-db-deployment
  labels:
  {{- include "3-tier.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.dbDeployment.replicas }}
  selector:
    matchLabels:
      app: postgres-db
    {{- include "3-tier.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: postgres-db
      {{- include "3-tier.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        envFrom:
        - configMapRef:
            name: {{ include "3-tier.fullname" . }}-config
        image: {{ .Values.dbDeployment.postgresDb.image.repository }}:{{ .Values.dbDeployment.postgresDb.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.dbDeployment.postgresDb.imagePullPolicy }}
        name: postgres-db
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-volume
      volumes:
      - name: postgres-volume
        persistentVolumeClaim:
          claimName: {{ include "3-tier.fullname" . }}-pv-claim